<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Violet</title>
    <link>https://bcair.github.io/post/</link>
    <description>Recent content in Posts on Violet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 19 May 2021 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://bcair.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Elisp: pcase 宏实现按键映射(草稿)</title>
      <link>https://bcair.github.io/post/elisp_pcase_practice/</link>
      <pubDate>Wed, 19 May 2021 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/elisp_pcase_practice/</guid>
      <description>1pcase 介绍 2pcase core-pattern 2.1用 `app` 代替 `SYMBOL + let` 来赋值 EXPVAL 2.2`let` 更多的接 `app` 3pcase 实现快捷键映射 3.1读取键盘事件，返回对应的修饰符描述字符串 3.2执行键盘事件对应的命令</description>
    </item>
    
    <item>
      <title>Debian 系统 MySQL 安装及 auth_socket 插件介绍</title>
      <link>https://bcair.github.io/post/debian_mysql_installation_and_auth_socket_plugin/</link>
      <pubDate>Wed, 13 Jan 2021 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/debian_mysql_installation_and_auth_socket_plugin/</guid>
      <description>1安装 MySQL 2使用 auth_socket 插件的 root 账户密码登录出错 3使用 auth_socket 验证（系统用户名与MySQL用户名相同） 4使用 auth_socket 验证（系统用户名与MySQL用户名不相同） 1</description>
    </item>
    
    <item>
      <title>HTML 文件上传</title>
      <link>https://bcair.github.io/post/file_uplaod/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/file_uplaod/</guid>
      <description>1文件上传 1.1HTML 表单发送文件 1.1.1表单属性 enctype 1.1.2发送文件的3个步骤 1.2django 获取上传文件 1.3参考 1文件上传 1.1HTML 表单发送文件 由于HTTP是一种文</description>
    </item>
    
    <item>
      <title>搭建 Debian 开发环境(虚拟机)</title>
      <link>https://bcair.github.io/post/debian_develop/</link>
      <pubDate>Fri, 25 Dec 2020 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/debian_develop/</guid>
      <description>1安装注意事项 2基础配置 2.1设置启动时间为一秒 2.2默认进入文本终端 2.3虚拟机网络配置为静态IP 2.4主机添加虚拟机IP地址到 hosts 文件 1安</description>
    </item>
    
    <item>
      <title>Tmux 基本使用</title>
      <link>https://bcair.github.io/post/tmux/</link>
      <pubDate>Fri, 20 Nov 2020 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/tmux/</guid>
      <description>1使用 Tmux 管理多个终端 2具体业务情景 3我的 Tmux 配置文件 4Tmux 内容与系统剪贴板交互 4.1系统剪贴板内容 -&amp;gt; Tmux 4.2Tmux 选中文本 -&amp;gt; 系统剪贴板 5一些使用流程 6部分高</description>
    </item>
    
    <item>
      <title>在Org中执行Python代码</title>
      <link>https://bcair.github.io/post/org-babel-block/</link>
      <pubDate>Tue, 13 Oct 2020 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/org-babel-block/</guid>
      <description>1含有数据的 Org 表格 2例1 全部数字增加 100 3例2 只对列命名，视所有数据为字符串拼接&amp;rdquo;*&amp;quot; 4例3 不可指定 :colnames yes 的情况 5参考 1含</description>
    </item>
    
    <item>
      <title>使用 hugo 及 ox-hugo 搭建基于 org 文档的静态博客</title>
      <link>https://bcair.github.io/post/use_ox-hugo_generate_blogs/</link>
      <pubDate>Sat, 03 Oct 2020 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/use_ox-hugo_generate_blogs/</guid>
      <description>1安装 hugo 到系统并生成站点 1.1新建 hugo 博文 1.2添加博文内容 1.3安装主题 1.4查看生成效果 1.5部署到 github pages 1.6部署脚本 2Emacs 部分 2.1安装配置</description>
    </item>
    
    <item>
      <title>elisp 删除列表元素</title>
      <link>https://bcair.github.io/post/elisp_delete_list_elements/</link>
      <pubDate>Sun, 20 Sep 2020 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/elisp_delete_list_elements/</guid>
      <description>1elisp 删除列表元素:@emacs:elisp: 1.1function: delq 1.2function: delete 1.3总结 1elisp 删除列表元素 1.1function: delq 用法： 1 delq object list 返回值中会删除所有的 eq匹配到的项，其他元素并不</description>
    </item>
    
    <item>
      <title>elisp 定义一个类似 use-package 包的加载配置文件的宏</title>
      <link>https://bcair.github.io/post/elisp%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E7%B1%BB%E4%BC%BCuse-package%E5%8C%85%E7%9A%84%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%AE%8F/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/elisp%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E7%B1%BB%E4%BC%BCuse-package%E5%8C%85%E7%9A%84%E5%8A%A0%E8%BD%BD%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E5%AE%8F/</guid>
      <description>1elisp 定义一个类似 use-package 包的加载配置文件的宏 1.1实参的处理 1.2使用循环不断的添加语句到宏展开结果 1.2.1不推介的格式 1.2.2推介的格式 1.2</description>
    </item>
    
    <item>
      <title>elisp 宏学习笔记一</title>
      <link>https://bcair.github.io/post/elisp_macro_note_1/</link>
      <pubDate>Wed, 26 Aug 2020 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/elisp_macro_note_1/</guid>
      <description>1elisp 宏学习笔记一 1elisp 宏学习笔记一 如何在调用宏时先处理部分其参数？ let eval 类似下面 1 2 3 4 (defmacro m/test2 (x) (format &amp;#34;ding %s&amp;#34; x)) (eval `(m/test2 ,(+ 2 7))) 1 ding 9 1 2 3 4 5 6 7 8 9 10 11 12 13 14 (defmacro</description>
    </item>
    
  </channel>
</rss>