<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Violet</title>
    <link>https://bcair.github.io/post/</link>
    <description>Recent content in Posts on Violet</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 09 Jan 2021 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://bcair.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo &amp; org-mode 搭建博客</title>
      <link>https://bcair.github.io/post/hugo-org-mode-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 09 Jan 2021 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/hugo-org-mode-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>记录使用 Emacs 搭配 Hugo 搭建静态博客的过程。预备条件：创建自己的 GitHub Page 仓库。 Hugo 准备 安装 Hugo Hugo 是用 Go 语言编写的静态站点引擎，除了手动编译、系统软件源安装外</description>
    </item>
    
    <item>
      <title>文件上传</title>
      <link>https://bcair.github.io/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</link>
      <pubDate>Mon, 20 Jul 2020 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</guid>
      <description>HTML 表单发送文件 由于HTTP是一种文本协议，所以处理文件这样的二进制数据(或者大家都这样认为的) 会有一些特殊的要求，而表单中其他数据都是文本数</description>
    </item>
    
    <item>
      <title>elisp学习 (一)：删除列表元素</title>
      <link>https://bcair.github.io/post/elisp%E5%88%97%E8%A1%A8%E4%B8%80%E5%85%83%E7%B4%A0%E7%9A%84%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0800</pubDate>
      
      <guid>https://bcair.github.io/post/elisp%E5%88%97%E8%A1%A8%E4%B8%80%E5%85%83%E7%B4%A0%E7%9A%84%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C/</guid>
      <description>function: delq 用法： 1 delq object list 返回值中会删除所有的 eq 匹配到的项，其他元素并不去重或者删除 匹配成功， delq 会改变原列表的值，原列表会对匹配元素“去重”或者“删</description>
    </item>
    
    <item>
      <title>elisp 宏实践(一)：使用宏批量定义流程相同的函数</title>
      <link>https://bcair.github.io/post/elisp-%E5%AE%8F%E5%AE%9E%E8%B7%B5%E4%B8%80%E4%BD%BF%E7%94%A8%E5%AE%8F%E6%89%B9%E9%87%8F%E5%AE%9A%E4%B9%89%E6%B5%81%E7%A8%8B%E7%9B%B8%E5%90%8C%E7%9A%84%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bcair.github.io/post/elisp-%E5%AE%8F%E5%AE%9E%E8%B7%B5%E4%B8%80%E4%BD%BF%E7%94%A8%E5%AE%8F%E6%89%B9%E9%87%8F%E5%AE%9A%E4%B9%89%E6%B5%81%E7%A8%8B%E7%9B%B8%E5%90%8C%E7%9A%84%E5%87%BD%E6%95%B0/</guid>
      <description>函数功能：快速访问 django 项目视图、表单模块和模板文件 之前为了方便 django 项目跳转视图、表单模块，写了几个函数，快捷键调用时可以迅速给出对应的文件列表便</description>
    </item>
    
    <item>
      <title>elisp 宏：定义一个类似 use-package 包的加载配置文件的宏</title>
      <link>https://bcair.github.io/post/elisp-%E5%AE%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bcair.github.io/post/elisp-%E5%AE%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</guid>
      <description>实参的处理 观察不同的格式实参，在展开时的类型 1 2 3 4 5 6 7 8 9 10 (defmacro m/demo1 (&amp;amp;rest x) `(first ,@x)) (defmacro m/demo2 (&amp;amp;rest x) `,@x) (macroexpand-1 &amp;#39;(m/demo1 (+ 1 1) (+ 2 2))) ;; =&amp;gt; (first (+ 1 1) (+ 2 2)) (macroexpand-1 &amp;#39;(m/demo2 (+ 1 1) (+ 2 2))) ;; =&amp;gt;</description>
    </item>
    
    <item>
      <title>elisp: pcase</title>
      <link>https://bcair.github.io/post/pcase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bcair.github.io/post/pcase/</guid>
      <description>pcase 用于构造“模式匹配”的条件语句，首字母p对应 pattern 对于多条件分支，常用的 cond 表达式有个缺陷：子句的 BODY 不可以获取条件表达式执行结果，有时为了获取该</description>
    </item>
    
    <item>
      <title>常用的 shell 变量</title>
      <link>https://bcair.github.io/post/%E5%B8%B8%E7%94%A8-shell-%E5%8F%98%E9%87%8F/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bcair.github.io/post/%E5%B8%B8%E7%94%A8-shell-%E5%8F%98%E9%87%8F/</guid>
      <description>注意下面的有些变量只适用于 sh 脚本编程： $0 当前脚本的文件名 $n 传递给脚本或函数的参数; n 是一个数字，表示第几个参数。例如，第一个参数是 $1 ，第二个</description>
    </item>
    
  </channel>
</rss>